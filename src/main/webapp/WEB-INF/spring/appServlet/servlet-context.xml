<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- 아래의 설정이 바로 MVC 패턴에서 View의 위치를 결정하는 역할수행 -->
	<view-resolvers>
		<jsp prefix="/WEB-INF/views/" suffix=".jsp" />
	</view-resolvers>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <beans:property name="defaultEncoding" value="utf8"/>
		 <beans:property name="maxInMemorySize" value="1048576"/>
		 <beans:property name="maxUploadSize" value="1048576"/>
		 <beans:property name="maxUploadSizePerFile" value="2097152"/>
		 <beans:property name="preserveFilename" value="true"/>
		 <beans:property name="uploadTempDir" value="file:///C:/Temp"/> 

	</beans:bean>

	<!-- 암호화를 위한 bean -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<beans:bean id="LoginInterceptor" class="org.zerock.momofit.interceptor.login.LoginInterceptor"/>
	<beans:bean id="LogoutInterceptor" class="org.zerock.momofit.interceptor.login.LogoutInterceptor"/>
	<beans:bean id="AuthInterceptor" class="org.zerock.momofit.interceptor.login.AuthInterceptor"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/signin" />
			<beans:ref bean="LoginInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/signout" />
			<beans:ref bean="LogoutInterceptor" />
		</interceptor>

		<interceptor>
			<mapping path="/mypage/*" />
			<beans:ref bean="AuthInterceptor" />
		</interceptor>
		
		<interceptor>
			<mapping path="/board/pic/*" />
			<beans:ref bean="AuthInterceptor" />
		</interceptor>
		


	</interceptors>

	<!-- 화면을 표시하는 용도 -->
	<view-controller path="/signout" view-name="/main/main" status-code="200"/>
		
	<context:component-scan base-package="org.zerock.momofit.listener" />
	<context:component-scan base-package="org.zerock.momofit.controller" />
	<context:component-scan base-package="org.zerock.momofit.config"/>
	<context:component-scan base-package="org.zerock.momofit.repository"/>
	<context:component-scan base-package="org.zerock.momofit.interceptor"/>
	
</beans:beans>
